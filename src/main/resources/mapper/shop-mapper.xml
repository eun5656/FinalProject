<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shop">

<resultMap type="store" id="storeMap">

</resultMap>


<select id="basicShopList" resultMap="storeMap">
SELECT * FROM STORE C,(SELECT ROWNUM AS RNUM, STORE_PK , COUNT STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, COUNT(REVIEW_PK)COUNT   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK)) S WHERE S.STORE_PK = C.STORE_PK ORDER BY C.STORE_pk asc 
</select>

<select id="mainStoreList" resultMap="storeMap">
SELECT * FROM STORE C,(SELECT ROWNUM AS RNUM, STORE_PK , COUNT STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, COUNT(REVIEW_PK)COUNT   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK ORDER BY COUNT(REVIEW_PK) DESC)) S WHERE S.STORE_PK = C.STORE_PK ORDER BY C.STORE_RANK desc
</select>

<select id="reviewSortShopList" resultMap="storeMap">
SELECT * FROM STORE C,(SELECT ROWNUM AS RNUM, STORE_PK , COUNT STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, COUNT(REVIEW_PK)COUNT   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK ORDER BY COUNT(REVIEW_PK) DESC)) S WHERE S.STORE_PK = C.STORE_PK ORDER BY s.store_review_count DESC
</select>

<select id="rankSortShopList" resultMap="storeMap">
SELECT * FROM STORE C,(SELECT ROWNUM AS RNUM, STORE_PK , COUNT STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, COUNT(REVIEW_PK)COUNT   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK ORDER BY COUNT(REVIEW_PK) DESC)) S WHERE S.STORE_PK = C.STORE_PK ORDER BY C.STORE_RANK DESC
</select>

<select id="bookmarkSortShopList" resultMap="storeMap">
SELECT * FROM STORE C,(SELECT ROWNUM AS RNUM, STORE_PK , COUNT STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, COUNT(REVIEW_PK)COUNT   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK ORDER BY COUNT(REVIEW_PK) DESC)) S WHERE S.STORE_PK = C.STORE_PK ORDER BY C.STORE_RANK desc
</select>

<select id="searchShopList" resultMap="storeMap">
SELECT * FROM STORE C,(SELECT ROWNUM AS RNUM, STORE_PK , COUNT STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, COUNT(REVIEW_PK)COUNT   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK ORDER BY COUNT(REVIEW_PK) DESC)) S WHERE S.STORE_PK = C.STORE_PK 
<if test="searchType.equals('location')">
and c.store_address like '%'||#{searchLocation}||'%'
</if>
<if test="searchType.equals('storeName')">
and c.store_name like '%'||#{searchLocation}||'%'
</if>
</select>

<select id="shopRankReviewCount" resultMap="storeMap">
 SELECT ROWNUM AS RNUM, STORE_PK , SUM STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, SUM(REVIEW_STAR) SUM   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK order by MAX(store_rank) Desc)
</select>

<select id="shopReviewCount" resultMap="storeMap">
SELECT ROWNUM AS RNUM, STORE_PK , SUM STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, SUM(REVIEW_STAR) SUM   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK ORDER BY COUNT(REVIEW_PK) DESC)
</select>

<select id="shopBasicReviewCount" resultMap="storeMap">
SELECT ROWNUM AS RNUM, STORE_PK , SUM STORE_REVIEW_COUNT FROM (SELECT C.STORE_PK, SUM(review_star) SUM   FROM STORE C LEFT OUTER JOIN REVIEW S ON C.STORE_PK = S.STORE_PK GROUP BY C.STORE_PK ORDER BY c.store_pk asc)
</select>




</mapper>
